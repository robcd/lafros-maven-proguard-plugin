  ---
  Home
  ---
  Rob Dickens
  ---
  2009-03-18
  ---

Home

* Introduction

  This plug-in currently has only one goal, namely to {{{liberate-mojo.html}
  proguard:liberate}} a jar from certain of its dependencies, using the
  {{{http://proguard.sourceforge.net} ProGuard}} utility\[1\].

  To use it, edit the <<<pom.xml>>> of the Maven project whose artifact is the jar to
  be liberated, as follows.

  The project's packaging type, and the scope of the dependencies to be liberated
  from, should be set as in the following example:

+---
<project>
  ...
  <packaging>liberated-jar</packaging>
  ...
  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-swing</artifactId>
      <version>${scala.version}</version>
      <scope>provided</scope>
    </dependency>
+---

  The plug-in should be referenced and configured with the desired
  {{{liberate-mojo.html#entryPoints}entryPoints}}, as in the following example:

+---
  ...
  <build>
    ...
    <plugins>
      <plugin>
        <groupId>com.lafros.maven.plugins.proguard</groupId>
        <artifactId>maven-proguard-plugin</artifactId>
        <configuration>
          <entryPoints>
            <param>com.lafros.gui.demo.alerts.app</param>
            <param>com.lafros.gui.app.Applet</param>
          </entryPoints>
          ...
        </configuration>
      </plugin>
+---

  The plug-in does have other parameters, but these have default values; the
  section which follows gives examples of when these should be changed.

  Finally, tell Maven where the plug-in is to be found:

+---
  ...
  <pluginRepositories>
    <pluginRepository>
      <id>lafros.com</id>
      <url>http://lafros.com/m2arts</url>
    </pluginRepository>
  </pluginRepositories>
+---

  To create the liberated jar, have Maven invoke the clean phase\[2\] followed by at least the package phase, 
  and the Java runtime with a larger maximum memory-allocation pool:

+---
$ export MAVEN_OPTS=-Xmx256m; mvn clean package
+---

  \[1\] There is an
  {{{http://pyx4me.com/pyx4me-maven-plugins/proguard-maven-plugin/} existing}}
  Maven ProGuard plug-in, but this does not have an equivalent goal.

  \[2\] This is a limitation of this first version of the plug-in (1.0).

* Examples where the default values should be changed

  The location of the jar containing the java runtime itself must be specified
  (using the {{{liberate-mojo.html#libraryJars}libraryJars}} element) if,
  as on Mac OS X, it is not in the standard location
  (<<<<java.home>/lib/rt.jar>>>):

+---
        <configuration>
          ...
          <libraryJars>
            <param>&lt;java.home&gt;/../Classes/classes.jar</param>
          </libraryJars>
        </configuration>
+---

  The dependencies being liberated from should be specified using the
  {{{liberate-mojo.html#liberateFromDepsWhoseArtsStartWith}liberateFromDepsWhoseArtsStartWith}}
  and {{{liberate-mojo.html#filter}filter}} elements, although the default values
  should be sufficient if liberating from the scala-library and scala-swing jars:

+---
        <configuration>
          ...
          <liberateFromDepsWhoseArtsStartWith>
            <param>some-large-lib-</param>
          </liberateFromDepsWhoseArtsStartWith>
          <filter>(!notInterestedIn/**, interestedIn/**)</filter>
        </configuration>
+---

  Any other dependencies which depend on those being liberated from should also be
  specified (using the
  {{{liberate-mojo.html#alsoSupportDepsWhoseArtsStartWith}alsoSupportDepsWhoseArtsStartWith}}
  element):

+---
        <configuration>
          ...
          <alsoSupportDepsWhoseArtsStartWith>
            <param>lafros-gui-</param>
          </alsoSupportDepsWhoseArtsStartWith>
        </configuration>
+---
